/**
 * InMoment Public REST API
 * Welcome to the InMoment Public REST API. Access is restricted to clients of InMoment. Contact your InMoment account manager for more information or visit [https://inmoment.com/](https://inmoment.com/) to learn what InMoment can do for you.   To help you get started, application client libraries for some popular languages and frameworks have been included below. - [csharp-dotnet2](/api/documentation/client/csharp-dotnet2.zip) - [go](/api/documentation/client/go.zip) - [java](/api/documentation/client/java.zip) - [javascript](/api/documentation/client/javascript.zip) - [php](/api/documentation/client/php.zip) - [python](/api/documentation/client/python.zip) - [typescript-angular](/api/documentation/client/typescript-angular.zip) - [typescript-angularjs](/api/documentation/client/typescript-angularjs.zip) - [typescript-jquery](/api/documentation/client/typescript-jquery.zip) - [typescript-node](/api/documentation/client/typescript-node.zip)  Additionally you can use many opensource tools to generate libraries yourself using the [OpenApi 3.0 Spec](/api/documentation/openapi.json)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@inmoment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InMomentPublicRestApi);
  }
}(this, function(expect, InMomentPublicRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InMomentPublicRestApi.ContactDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContactDTO', function() {
    it('should create an instance of ContactDTO', function() {
      // uncomment below and update the code to test ContactDTO
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be.a(InMomentPublicRestApi.ContactDTO);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property organizationId (base name: "organizationId")', function() {
      // uncomment below and update the code to test the property organizationId
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property loyaltyNumber (base name: "loyaltyNumber")', function() {
      // uncomment below and update the code to test the property loyaltyNumber
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property salesforceId (base name: "salesforceId")', function() {
      // uncomment below and update the code to test the property salesforceId
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property facebookId (base name: "facebookId")', function() {
      // uncomment below and update the code to test the property facebookId
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property twitterId (base name: "twitterId")', function() {
      // uncomment below and update the code to test the property twitterId
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "creationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedTime (base name: "lastModifiedTime")', function() {
      // uncomment below and update the code to test the property lastModifiedTime
      //var instane = new InMomentPublicRestApi.ContactDTO();
      //expect(instance).to.be();
    });

  });

}));
