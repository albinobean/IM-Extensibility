/**
 * InMoment Public REST API
 * Welcome to the InMoment Public REST API. Access is restricted to clients of InMoment. Contact your InMoment account manager for more information or visit [https://inmoment.com/](https://inmoment.com/) to learn what InMoment can do for you.   To help you get started, application client libraries for some popular languages and frameworks have been included below. - [csharp-dotnet2](/api/documentation/client/csharp-dotnet2.zip) - [go](/api/documentation/client/go.zip) - [java](/api/documentation/client/java.zip) - [javascript](/api/documentation/client/javascript.zip) - [php](/api/documentation/client/php.zip) - [python](/api/documentation/client/python.zip) - [typescript-angular](/api/documentation/client/typescript-angular.zip) - [typescript-angularjs](/api/documentation/client/typescript-angularjs.zip) - [typescript-jquery](/api/documentation/client/typescript-jquery.zip) - [typescript-node](/api/documentation/client/typescript-node.zip)  Additionally you can use many opensource tools to generate libraries yourself using the [OpenApi 3.0 Spec](/api/documentation/openapi.json)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@inmoment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiException from '../model/ApiException';
import InlineObject from '../model/InlineObject';
import PublicKasePage from '../model/PublicKasePage';

/**
* CaseManagement service.
* @module api/CaseManagementApi
* @version 1.0.0
*/
export default class CaseManagementApi {

    /**
    * Constructs a new CaseManagementApi. 
    * @alias module:api/CaseManagementApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the caseGetCases operation.
     * @callback module:api/CaseManagementApi~caseGetCasesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublicKasePage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get case data
     * Get case data for a given organization and date range. Request is paginated.
     * @param {Number} orgId 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageIndex  (default to 0)
     * @param {Number} opts.pageSize  (default to 10)
     * @param {module:api/CaseManagementApi~caseGetCasesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublicKasePage}
     */
    caseGetCases(orgId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'orgId' is set
      if (orgId === undefined || orgId === null) {
        throw new Error("Missing the required parameter 'orgId' when calling caseGetCases");
      }

      let pathParams = {
        'orgId': orgId
      };
      let queryParams = {
        'pageIndex': opts['pageIndex'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['IdentityUser', 'Legacy'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PublicKasePage;
      return this.apiClient.callApi(
        '/case/org/{orgId}/cases', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the caseGetCasesWithFilter operation.
     * @callback module:api/CaseManagementApi~caseGetCasesWithFilterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublicKasePage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get case data with filter
     * Get case data for a given organization and date range. Request is paginated.
     * @param {Number} orgId 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageIndex  (default to 0)
     * @param {Number} opts.pageSize  (default to 10)
     * @param {module:model/InlineObject} opts.inlineObject 
     * @param {module:api/CaseManagementApi~caseGetCasesWithFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublicKasePage}
     */
    caseGetCasesWithFilter(orgId, opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject'];
      // verify the required parameter 'orgId' is set
      if (orgId === undefined || orgId === null) {
        throw new Error("Missing the required parameter 'orgId' when calling caseGetCasesWithFilter");
      }

      let pathParams = {
        'orgId': orgId
      };
      let queryParams = {
        'pageIndex': opts['pageIndex'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['IdentityUser', 'Legacy'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PublicKasePage;
      return this.apiClient.callApi(
        '/case/org/{orgId}/cases', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
