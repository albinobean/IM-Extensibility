/**
 * InMoment Public REST API
 * Welcome to the InMoment Public REST API. Access is restricted to clients of InMoment. Contact your InMoment account manager for more information or visit [https://inmoment.com/](https://inmoment.com/) to learn what InMoment can do for you.   To help you get started, application client libraries for some popular languages and frameworks have been included below. - [csharp-dotnet2](/api/documentation/client/csharp-dotnet2.zip) - [go](/api/documentation/client/go.zip) - [java](/api/documentation/client/java.zip) - [javascript](/api/documentation/client/javascript.zip) - [php](/api/documentation/client/php.zip) - [python](/api/documentation/client/python.zip) - [typescript-angular](/api/documentation/client/typescript-angular.zip) - [typescript-angularjs](/api/documentation/client/typescript-angularjs.zip) - [typescript-jquery](/api/documentation/client/typescript-jquery.zip) - [typescript-node](/api/documentation/client/typescript-node.zip)  Additionally you can use many opensource tools to generate libraries yourself using the [OpenApi 3.0 Spec](/api/documentation/openapi.json)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@inmoment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateParametersDTOValues model module.
 * @module model/UpdateParametersDTOValues
 * @version 1.0.0
 */
class UpdateParametersDTOValues {
    /**
     * Constructs a new <code>UpdateParametersDTOValues</code>.
     * @alias module:model/UpdateParametersDTOValues
     * @param key {String} ID of the prompt for this answer.
     */
    constructor(key) { 
        
        UpdateParametersDTOValues.initialize(this, key);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, key) { 
        obj['key'] = key;
    }

    /**
     * Constructs a <code>UpdateParametersDTOValues</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateParametersDTOValues} obj Optional instance to populate.
     * @return {module:model/UpdateParametersDTOValues} The populated <code>UpdateParametersDTOValues</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateParametersDTOValues();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('remove')) {
                obj['remove'] = ApiClient.convertToType(data['remove'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * ID of the prompt for this answer.
 * @member {String} key
 */
UpdateParametersDTOValues.prototype['key'] = undefined;

/**
 * The string representation of the answer. For categorical prompts, this should be the DTMF code for the specific answer option.
 * @member {String} value
 */
UpdateParametersDTOValues.prototype['value'] = undefined;

/**
 * Set true if you wish to remove the existing answer for this prompt rather than update it.
 * @member {Boolean} remove
 * @default false
 */
UpdateParametersDTOValues.prototype['remove'] = false;






export default UpdateParametersDTOValues;

